version: '3.8'
services:
  # Test PostgreSQL Database
  postgres-test:
    image: postgres:15
    container_name: splitmate-postgres-test
    restart: "no"
    environment:
      POSTGRES_DB: splitmate_test
      POSTGRES_USER: test_user
      POSTGRES_PASSWORD: test_password
      POSTGRES_ROOT_PASSWORD: test_root_password
    ports:
      - "5433:5432"
    volumes:
      - ./backend/src/database/supabase-schema-safe.sql:/docker-entrypoint-initdb.d/schema.sql
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U test_user -d splitmate_test"]
      timeout: 20s
      retries: 10
      interval: 5s
      start_period: 20s
    networks:
      - splitmate-test-network

  # Backend Test Runner
  backend-test:
    build:
      context: .
      dockerfile: backend/Dockerfile.test
    container_name: splitmate-backend-test
    restart: "no"
    environment:
      NODE_ENV: test
      DB_HOST: postgres-test
      DB_USER: test_user
      DB_PASSWORD: test_password
      DB_NAME: splitmate_test
      DB_PORT: 5432
      PORT: 3002
      FRONTEND_URL: http://localhost:3000
      BACKEND_URL: http://localhost:3002
      GOOGLE_CLIENT_ID: test-client-id.apps.googleusercontent.com
      GOOGLE_CLIENT_SECRET: test-client-secret
      SESSION_SECRET: test-session-secret-for-testing-only
    depends_on:
      postgres-test:
        condition: service_healthy
    volumes:
      - ./backend:/app/backend
      - ./package.json:/app/package.json
      - ./package-lock.json:/app/package-lock.json
      - /app/backend/node_modules
    networks:
      - splitmate-test-network
    command: ["npm", "run", "test", "--workspace=backend"]

networks:
  splitmate-test-network:
    driver: bridge

volumes:
  postgres_test_data: 
